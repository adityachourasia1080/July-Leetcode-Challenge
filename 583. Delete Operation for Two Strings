class Solution {
public:
    int lcs(string a,string b,int n,int m,vector<vector<int>>& dp)
    {
        if (n==0 || m==0)   return 0;
        
        if (dp[n][m]!=-1)   return dp[n][m];
        int ans;
        if (a[n-1]==b[m-1])  ans= lcs(a,b,n-1,m-1,dp)+1;
        else  ans=max(lcs(a,b,n-1,m,dp),lcs(a,b,n,m-1,dp));
        
        
        return dp[n][m]=ans;
        
        
    }
    int minDistance(string word1, string word2) {
        
        vector<vector<int>> dp(word1.length()+1,vector<int>(word2.length()+1,-1));
        int len=lcs(word1,word2,word1.length(),word2.length(),dp);
        return (word1.length()+word2.length()-(2*len));
        
    }
};
