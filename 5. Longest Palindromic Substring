class Solution {
public:
    string longestPalindrome(string s) {
        int n= s.length();
        if (n==0 || n==1)   return s;
        vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
        int len=1;
        int index=0;
        for (int i=0;i<n;i++)  dp[i][i]=1;
        for (int i=0;i<n-1;i++)
        {
            if (s[i]==s[i+1])
            {
              dp[i][i+1]=1;
                index=i;
                len=2;
            }
            else dp[i][i+1]=0;
        }
        
        for (int gap=2;gap<=n;gap++)
        {
            for (int i=0;i<n-gap;i++)
            {
                int j= i+gap;
                if (dp[i+1][j-1]==1  && s[i]==s[j])
                {
                    dp[i][j]=1;
                    index=i;
                    len=gap+1;
                }
                else  dp[i][j]=0;
                
            }
        }
        
        return s.substr(index,len);
        
        
    }
};
